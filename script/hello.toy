//print the fibonacci numbers
var fibonacci = (n) => {
	if (n <= 1) return n;
	return fibonacci(n - 2) + fibonacci(n - 1);
}

for (var i = 0; i < 20; i++) {
	print fibonacci(i);
}

var identity = x => x;

for (var i = 0; i < 10; i++) print identity("foobar");
print "done";

var makeCounter = () => {
  var i = 0;
  var count = () => {
    return ++i;
  }

  return count;
}

var counter = makeCounter();
print counter(); // "1"
print counter(); // "2"
print counter(); // "3"

(() => { print "foobar"; })();

//while (true) print Clock();

//TODO: built in methods for string, array and dictionary
//TODO: mutating strings
//TODO: type casting (string -> number and number -> string)
//TODO: default arugments
//TODO: import/module system
//TODO: arrays
//TODO: dictionaries
//TODO: foreach(var element in object)
//TODO: foreach(var index of object)
//TODO: foreach(var char in "string")
//TODO: rest/spread operator
//TODO: destructuring
//TODO: MAYBE promises
//TODO: MAYBE coroutines
//TODO: MAYBE regex
//TODO: MAYBE template strings
//TODO: MAYBE namespaces
//TODO: How would I do generics?
//TODO: automatic properties?
//TODO: Vector (position) library
//TODO: https://stackoverflow.com/questions/509211/understanding-slice-notation
//TODO: MAYBE break x;
//TODO: MAYBE continue x;

