



/*intreter logic: 
	find GROUPING
		read expression
		...
	end GROUPING - if grouping count > 1 && you don't find a function call -> runtime error

const a = ("Hello world", "foobar");
*/

const f = () => {
	print "inside f";
};

const g = arg1 => {
	return arg1;
};

const h = (arg1, arg2) => arg1 + arg2;

//the output
f(); //inside f\n
print g("argument"); //argument\n
print h(42, 300); //342\n

//test closures
const makeCounter = () => {
	var counter = 0;
	return () => {
		return counter += 1;
	};
};

const counter = makeCounter();

print counter(); //1\n
print counter(); //2\n
print counter(); //3\n
